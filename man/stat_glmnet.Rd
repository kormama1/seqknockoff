% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knockoff_filters.R
\name{stat_glmnet}
\alias{stat_glmnet}
\title{Importance statistics: Absolute elastic-net coefficient differences between original and knockoff variables}
\usage{
stat_glmnet(X, X_k, y, family, ...)
}
\arguments{
\item{X}{original data.frame (or tibble) with "numeric" and "factor" columns only. The number of columns, ncol(X) needs to be > 2.}

\item{X_k}{knockoff data.frame (or tibble) with "numeric" and "factor" columns only. The dimensions and column classes must match
those of the original X.}

\item{y}{response vector with \code{length(y) = nrow(X)}. Accepts "numeric" (family="gaussian") or binary "factor" (family="binomial").}

\item{family}{should be "gaussian" if y is numeric, but "binomial" if y is a binary factor variable.}

\item{...}{additional parameters passed to knockoff::stat.glmnet_coefdiff}
}
\value{
a vector of importance statistics W of length equal to number of columns of the model.matrix of X.
}
\description{
This is a wrapper function that calls knockoff::glmnet.stat_coefdiff. The input data.frames
are first converted to design matrices (with the function model.matrix). This means that if
the input features contain factor variables then an importance statistic is calculated for
each dummy variable as determined by the model.matrix contrasts (defaults to indicator dummy
variables with a reference level).
}
\examples{
library(seqknockoff)

set.seed(1)

# Simulate 10 Gaussian covariate predictors:
X <- generate_X(n=1000, p=10, p_b=0, cov_type="cov_equi", rho=0.5)

 # Calculate the knockoff copy of X:
 X_k <- knockoffs(X)

# Simulate response from model y = X\%*\%beta + epsilon, where epsilon ~ N(0,1) with
# first 5 beta-coefficients = 8 (all other zero).
y <- generate_y(X, p_nn=5, a=8)

W <- stat_glmnet(X=X, X_k=X_k, y=y, family="gaussian", nfolds=5)
}
