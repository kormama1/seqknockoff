% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knockoff_filters.R
\name{knockoff_filter}
\alias{knockoff_filter}
\title{The Knockoff Filter}
\usage{
knockoff_filter(X, y, fdr = 0.2, family = "gaussian",
  knockoffs = knockoffs_seq, statistic = stat_glmnet)
}
\arguments{
\item{X}{data.frame (or tibble) with "numeric" and "factor" columns only. The number of columns, ncol(X) needs to be > 2.}

\item{y}{response vector with \code{length(y) = nrow(X)}. Accepts "numeric" (family="gaussian") or binary "factor" (family="binomial").}

\item{fdr}{target false discovery rate. Can be a vector of multiple thresholds.}

\item{family}{should be "gaussian" if y is numeric, but "binomial" if y is a binary factor variable.}

\item{knockoffs}{user-specified function to construct knockoff of X. It must take as input
the data.frame (or tibble) X and return a data.frame (or tibble) X_k of corresponding
knockoffs. By default, \code{knockoffs=knockoffs_seq}, but other option is
\code{knockoffs=knockoffs_mx} for X with numeric columns only (see ?knockoffs_seq and ?knockoffs_mx).}

\item{statistic}{user-specified function that constructs feature statistics used to assess variable importance.
By default \code{statistic=stat_glmnet} (see ?stat_glmnet).}
}
\value{
if length(fdr)=1 the function returns a vector of selected indices, otherwise a list of selected indices, one selection vector per fdr threshold supplied.
}
\description{
This is an adaptation of the knockoff.filter function from the R-package knockoff. It
allows for input X with both "numeric" and "factor" columns, input y can be either
numeric or binary factor, and user may specify multiple fdr thresholds.
}
\examples{
library(seqknockoff)

set.seed(1)

# Simulate 10 Gaussian covariate predictors:
X <- generate_X(n=1000, p=10, p_b=0, cov_type="cov_equi", rho=0.5)

# Simulate response from model y = X\%*\%beta + epsilon, where epsilon ~ N(0,1) with
# first 5 beta-coefficients = 8 (all other zero).
y <- generate_y(X, p_nn=5, a=8)

S <- knockoff_filter(X, y, fdr=c(0.05, 0.1, 0.2))

# dichotomize y for logistic regression knockoff filter:
y <- factor(y > median(y))

# Below the family argument gets passed to the statistic = knockoff::stat.glmnet_coefdiff function:
S <- knockoff_filter(X, y, fdr=c(0.05, 0.1, 0.2), family="binomial")
}
